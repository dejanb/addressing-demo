apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: edge2
  labels:
    application: edge2
spec:
  replicas: 1
  selector:
    matchLabels:
      application: edge2
  template:
    metadata:
      labels:
        application: edge2
    spec:
      serviceAccountName: edge2
      containers:
      - env:
        - name: APPLICATION_NAME
          value: edge2
        - name: QDROUTERD_CONF
          value: /etc/qpid-dispatch/qdrouterd.conf
        - name: QDROUTERD_AUTO_MESH_DISCOVERY
          value: QUERY
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: quay.io/interconnectedcloud/qdrouterd:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: qdrouterd
        ports:
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 55672
          name: inter-router
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/qpid-dispatch/
          name: edge2
        - name: internal-certs
          readOnly: true
          mountPath: /etc/qpid-dispatch-certs/internal
      volumes:
      - name: edge2
        configMap:
          name: edge2
      - name: internal-certs
        secret:
          secretName: inter-router-certs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edge2
  labels:
    application: edge2
data:
  qdrouterd.conf: |2+

    router {
        mode: interior
        id: ${HOSTNAME}
    }

    listener {
        host: 0.0.0.0
        port: 5672
        role: normal
    }

    listener {
        host: 0.0.0.0
        port: 8080
        role: normal
        http: true
    }

    sslProfile {
        name: inter-router-ssl
        certFile: /etc/qpid-dispatch-certs/internal/tls.crt
        keyFile: /etc/qpid-dispatch-certs/internal/tls.key
        certDb: /etc/qpid-dispatch-certs/internal/ca.crt
    }

    listener {
        role: inter-router
        host: 0.0.0.0
        port: 55672
        sslProfile: inter-router-ssl
    }

    connector {
        role: inter-router
        host: CLOUD1.FQDN
        port: 443
        sslProfile: inter-router-ssl
        verifyHostname: false
    }

    connector {
        role: inter-router
        host: CLOUD2.FQDN
        port: 443
        sslProfile: inter-router-ssl
        verifyHostname: false
    }

    address {
        prefix: balanced
        distribution: balanced
    }

    address {
        prefix: closest
        distribution: closest
    }

    address {
        prefix: multicast
        distribution: multicast
    }

    address {
        prefix: all
        distribution: multicast
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: edge2
  name: edge2
spec:
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: http
    port: 8080
    targetPort: 8080
  - name: inter-router
    port: 55672
    targetPort: 55672
  selector:
    application: edge2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge2
  labels:
    application: edge2
---
apiVersion: v1
kind: Secret
metadata:
  name: connect-config
type: Opaque
stringData:
  connect.json: |-
    {
        "scheme": "amqp",
        "host": "edge2"
    }
